<!DOCTYPE html>
<html>
<head>
    <title>간단한 지도 표시하기</title>

    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
          integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
          crossorigin="anonymous">

    <!-- JS -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
            integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
            crossorigin="anonymous"></script>

    <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=xlkaszxuya"></script>


</head>

    <script>
        function LoadingWithMask() {
            //화면에 출력할 마스크를 설정해줍니다.
            var mask = "<div id='mask' style='position:absolute; z-index:9000; background-color:#000000; display:none; left:0; top:0;'></div>";
            var loadingImg = '';

            loadingImg += "<div id='loadingImg'>";
            loadingImg += "<img src='https://blog.kakaocdn.net/dn/dspe9B/btrfiG6XzXj/ZyevKlNxVdqFVVUgSSO6k0/img.gif' style='position: absolute; display: inline-block; margin: 25% 40%'/>";
            loadingImg += "</div>";
            //화면에 레이어 추가
            $('body').append(mask)

            //마스크의 높이와 너비를 화면 것으로 만들어 전체 화면을 채웁니다.
            $('#mask').css({
                'margin':'25px 0px 0px 0px',
                'width': '60%',
                'height': '800px',
                'opacity': '0.3'
            });

            //마스크 표시
            $('#mask').show();

            //로딩중 이미지 표시
            $('.loadingImg').append(loadingImg);
            $('#loadingImg').show();
        }

        function closeLoadingWithMask() {
            $('#mask, #loadingImg').hide();
            $('#mask, #loadingImg').empty();
        }
    </script>

    <style>
        /* Always set the map height explicitly to define the size of the div
         * element that contains the map. */
        #map {
            width: 60%;
            height: 800px;
        }

        /* Optional: Makes the sample page fill the window. */
        html,
        body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        floating-panel {
          position: absolute;
          top: 10px;
          left: 25%;
          z-index: 5;
          background-color: #fff;
          padding: 5px;
          border: 1px solid #999;
          text-align: center;
          font-family: "Roboto", "sans-serif";
          line-height: 30px;
          padding-left: 10px;
        }

    </style>

    <body>
    <!-- 드롭다운 박스를 만들어서 해당 값을 받으면 값에 해당하는 고속도로 경로를 호출하게 만들면됨 switch문 가능? -->
    <div id="floating-panel">
      <b>고속도로를 선택해 주세요: </b>
      <select id="mode" onchange="select_highway()">
        <option value="0">고속도로를 선택해 주세요.</option>
        <option value="1">경부고속도로</option>
        <option value="2">남해고속도로</option>
        <option value="3">당진영덕고속도로</option>
        <option value="4">순천완주고속도로</option>
        <option value="5">영동고속도로</option>
        <option value="6">익산장수고속도로</option>
        <option value="7">중부고속도로</option>
        <option value="8">중부내륙고속도로</option>
        <option value="9">중앙고속도로</option>
        <option value="10">통영대전고속도로</option>
        <option value="11">평택제천고속도로</option>
        <option value="12">호남고속도로</option>
      </select>
    </div>

    <div id="map" class="loadingImg"></div>


    <!--API script-->
    <script>
        function select_highway(){
            let target = document.getElementById("mode");
            let target_op = target.options[target.selectedIndex].value

            if(target_op == 0){
                fast00();
            }else if(target_op == 1){
                fast01();
                LoadingWithMask();
                setTimeout("closeLoadingWithMask()", 2600);
            }else if(target_op == 2){
                fast02()
                LoadingWithMask();
                setTimeout("closeLoadingWithMask()", 2600);
            }else if(target_op == 3){
                fast03()
                LoadingWithMask();
                setTimeout("closeLoadingWithMask()", 2600);
            }else if(target_op == 4){
                fast04()
                LoadingWithMask();
                setTimeout("closeLoadingWithMask()", 2600);
            }else if(target_op == 5){
                fast05()
                LoadingWithMask();
                setTimeout("closeLoadingWithMask()", 2600);
            }else if(target_op == 6){
                fast06()
                LoadingWithMask();
                setTimeout("closeLoadingWithMask()", 2600);
            }else if(target_op == 7){
                fast07()
                LoadingWithMask();
                setTimeout("closeLoadingWithMask()", 2600);
            }else if(target_op == 8){
                fast08()
                LoadingWithMask();
                setTimeout("closeLoadingWithMask()", 2600);
            }else if(target_op == 9){
                fast09()
                LoadingWithMask();
                setTimeout("closeLoadingWithMask()", 2600);
            }else if(target_op == 10){
                fast10()
                LoadingWithMask();
                setTimeout("closeLoadingWithMask()", 2600);
            }else if(target_op == 11){
                fast11()
                LoadingWithMask();
                setTimeout("closeLoadingWithMask()", 2600);
            }else if(target_op == 12){
                fast12()
                LoadingWithMask();
                setTimeout("closeLoadingWithMask()", 2600);
            }
        }


        <!--  지도 기본  -->
        //지도 기본설정
        let map

        $(document).ready(function () {
            marker_list()

            map = new naver.maps.Map('map', {
            center: new naver.maps.LatLng(36.472796, 127.752943),
            zoom: 8,
            zoomControl: true, //줌 컨트롤의 표시 여부
            zoomControlOptions: { //줌 컨트롤의 옵션
                position: naver.maps.Position.TOP_RIGHT
            }
        });
        });

        <!-- 길그리기 기본 -->
        var polyline = new naver.maps.Polyline({
            map: map,
            clickable: true,
            strokeWeight: 8,
            strokeColor:'#1acca4',
            path: [],
        });


        /* polyline의 path를 가져오는 방법 */
        let path = polyline.getPath();
        console.log(path)

        function  fast00(){
            path.clear();
        };

        function fast01() {
            $.ajax({
                type: "GET",
                url: "/main/01",
                data: {},
                success: function (response) {
                    /*본격적으로 시작히기 전 앞에 선언된 path 리스트 비우기*/
                    path.clear();
                    /* 롤 오버 옵션 적용 */
                    naver.maps.Event.addListener(polyline, 'mouseover', function () {
                        polyline.setOptions({
                            strokeColor: '#0800ff',
                            strokeStyle: 'solid',
                            strokeOpacity: 0.5,
                            strokeWeight: 12
                        });
                    });

                    naver.maps.Event.addListener(polyline, 'mouseout', function () {
                        polyline.setOptions({
                            strokeColor:'#1acca4',
                            strokeStyle: 'solid',
                            strokeOpacity: 1,
                            strokeWeight: 8
                        });
                    });

                    let latlng = response["latlng_all1"];
                    for (let i = 0; i < latlng.length; i++) {
                    /* 좌표 최적화 */
                        if(i%4 != 0){
                            continue;
                        }else{
                            let lat = latlng[i]['lat']
                            let lng = latlng[i]['lng']
                            /* 좌표를 받아서 path에 push */
                            path.push(new naver.maps.LatLng(lat,lng),)
                        }
                    }
                }
            })
        };

        function fast02() {
            $.ajax({
                type: "GET",
                url: "/main/02",
                data: {},
                success: function (response) {
                    /*본격적으로 시작히기 전 앞에 선언된 path 리스트 비우기*/
                    path.clear();
                    /* 롤 오버 옵션 적용 */
                    naver.maps.Event.addListener(polyline, 'mouseover', function () {
                        polyline.setOptions({
                            strokeColor: '#0800ff',
                            strokeStyle: 'solid',
                            strokeOpacity: 0.5,
                            strokeWeight: 12
                        });
                    });

                    naver.maps.Event.addListener(polyline, 'mouseout', function () {
                        polyline.setOptions({
                            strokeColor:'#1acca4',
                            strokeStyle: 'solid',
                            strokeOpacity: 1,
                            strokeWeight: 8

                        });
                    });

                    let latlng = response["latlng_all2"];
                    for (let i = 0; i < latlng.length; i++) {
                    /* 좌표 최적화 */
                        if(i%4 != 0){
                            continue;
                        }else{
                            let lat = latlng[i]['lat']
                            let lng = latlng[i]['lng']
                            /* 좌표를 받아서 path에 push */
                            path.push(new naver.maps.LatLng(lat,lng),)
                        }
                    }
                }
            })
        };

        function fast03() {
            $.ajax({
                type: "GET",
                url: "/main/03",
                data: {},
                success: function (response) {
                    /*본격적으로 시작히기 전 앞에 선언된 path 리스트 비우기*/
                    path.clear();
                    /* 롤 오버 옵션 적용 */
                    naver.maps.Event.addListener(polyline, 'mouseover', function () {
                        polyline.setOptions({
                            strokeColor: '#0800ff',
                            strokeStyle: 'solid',
                            strokeOpacity: 0.5,
                            strokeWeight: 12
                        });
                    });

                    naver.maps.Event.addListener(polyline, 'mouseout', function () {
                        polyline.setOptions({
                            strokeColor:'#1acca4',
                            strokeStyle: 'solid',
                            strokeOpacity: 1,
                            strokeWeight: 8

                        });
                    });

                    let latlng = response["latlng_all3"];
                    for (let i = 0; i < latlng.length; i++) {
                    /* 좌표 최적화 */
                        if(i%4 != 0){
                            continue;
                        }else{
                            let lat = latlng[i]['lat']
                            let lng = latlng[i]['lng']
                            /* 좌표를 받아서 path에 push */
                            path.push(new naver.maps.LatLng(lat,lng),)
                        }
                    }
                }
            })
        };

        function fast04() {
            $.ajax({
                type: "GET",
                url: "/main/04",
                data: {},
                success: function (response) {
                    /*본격적으로 시작히기 전 앞에 선언된 path 리스트 비우기*/
                    path.clear();
                    /* 롤 오버 옵션 적용 */
                    naver.maps.Event.addListener(polyline, 'mouseover', function () {
                        polyline.setOptions({
                            strokeColor: '#0800ff',
                            strokeStyle: 'solid',
                            strokeOpacity: 0.5,
                            strokeWeight: 12
                        });
                    });

                    naver.maps.Event.addListener(polyline, 'mouseout', function () {
                        polyline.setOptions({
                            strokeColor:'#1acca4',
                            strokeStyle: 'solid',
                            strokeOpacity: 1,
                            strokeWeight: 8

                        });
                    });

                    let latlng = response["latlng_all4"];
                    for (let i = 0; i < latlng.length; i++) {
                    /* 좌표 최적화 */
                        if(i%4 != 0){
                            continue;
                        }else{
                            let lat = latlng[i]['lat']
                            let lng = latlng[i]['lng']
                            /* 좌표를 받아서 path에 push */
                            path.push(new naver.maps.LatLng(lat,lng),)
                        }
                    }
                }
            })
        };

        function fast05() {
            $.ajax({
                type: "GET",
                url: "/main/05",
                data: {},
                success: function (response) {
                    /*본격적으로 시작히기 전 앞에 선언된 path 리스트 비우기*/
                    path.clear();
                    /* 롤 오버 옵션 적용 */
                    naver.maps.Event.addListener(polyline, 'mouseover', function () {
                        polyline.setOptions({
                            strokeColor: '#0800ff',
                            strokeStyle: 'solid',
                            strokeOpacity: 0.5,
                            strokeWeight: 12
                        });
                    });

                    naver.maps.Event.addListener(polyline, 'mouseout', function () {
                        polyline.setOptions({
                            strokeColor:'#1acca4',
                            strokeStyle: 'solid',
                            strokeOpacity: 1,
                            strokeWeight: 8

                        });
                    });

                    let latlng = response["latlng_all5"];
                    for (let i = 0; i < latlng.length; i++) {
                    /* 좌표 최적화 */
                        if(i%4 != 0){
                            continue;
                        }else{
                            let lat = latlng[i]['lat']
                            let lng = latlng[i]['lng']
                            /* 좌표를 받아서 path에 push */
                            path.push(new naver.maps.LatLng(lat,lng),)
                        }
                    }
                }
            })
        };

        function fast06() {
            $.ajax({
                type: "GET",
                url: "/main/06",
                data: {},
                success: function (response) {
                    /*본격적으로 시작히기 전 앞에 선언된 path 리스트 비우기*/
                    path.clear();
                    /* 롤 오버 옵션 적용 */
                    naver.maps.Event.addListener(polyline, 'mouseover', function () {
                        polyline.setOptions({
                            strokeColor: '#0800ff',
                            strokeStyle: 'solid',
                            strokeOpacity: 0.5,
                            strokeWeight: 12
                        });
                    });

                    naver.maps.Event.addListener(polyline, 'mouseout', function () {
                        polyline.setOptions({
                            strokeColor:'#1acca4',
                            strokeStyle: 'solid',
                            strokeOpacity: 1,
                            strokeWeight: 8

                        });
                    });

                    let latlng = response["latlng_all6"];
                    for (let i = 0; i < latlng.length; i++) {
                    /* 좌표 최적화 */
                        if(i%4 != 0){
                            continue;
                        }else{
                            let lat = latlng[i]['lat']
                            let lng = latlng[i]['lng']
                            /* 좌표를 받아서 path에 push */
                            path.push(new naver.maps.LatLng(lat,lng),)
                        }
                    }
                }
            })
        };

        function fast07() {
            $.ajax({
                type: "GET",
                url: "/main/07",
                data: {},
                success: function (response) {
                    /*본격적으로 시작히기 전 앞에 선언된 path 리스트 비우기*/
                    path.clear();
                    /* 롤 오버 옵션 적용 */
                    naver.maps.Event.addListener(polyline, 'mouseover', function () {
                        polyline.setOptions({
                            strokeColor: '#0800ff',
                            strokeStyle: 'solid',
                            strokeOpacity: 0.5,
                            strokeWeight: 12
                        });
                    });

                    naver.maps.Event.addListener(polyline, 'mouseout', function () {
                        polyline.setOptions({
                            strokeColor:'#1acca4',
                            strokeStyle: 'solid',
                            strokeOpacity: 1,
                            strokeWeight: 8

                        });
                    });

                    let latlng = response["latlng_all7"];
                    for (let i = 0; i < latlng.length; i++) {
                    /* 좌표 최적화 */
                        if(i%4 != 0){
                            continue;
                        }else{
                            let lat = latlng[i]['lat']
                            let lng = latlng[i]['lng']
                            /* 좌표를 받아서 path에 push */
                            path.push(new naver.maps.LatLng(lat,lng),)
                        }
                    }
                }
            })
        };

        function fast08() {
            $.ajax({
                type: "GET",
                url: "/main/08",
                data: {},
                success: function (response) {
                    /*본격적으로 시작히기 전 앞에 선언된 path 리스트 비우기*/
                    path.clear();
                    /* 롤 오버 옵션 적용 */
                    naver.maps.Event.addListener(polyline, 'mouseover', function () {
                        polyline.setOptions({
                            strokeColor: '#0800ff',
                            strokeStyle: 'solid',
                            strokeOpacity: 0.5,
                            strokeWeight: 12
                        });
                    });

                    naver.maps.Event.addListener(polyline, 'mouseout', function () {
                        polyline.setOptions({
                            strokeColor:'#1acca4',
                            strokeStyle: 'solid',
                            strokeOpacity: 1,
                            strokeWeight: 8

                        });
                    });

                    let latlng = response["latlng_all8"];
                    for (let i = 0; i < latlng.length; i++) {
                    /* 좌표 최적화 */
                        if(i%4 != 0){
                            continue;
                        }else{
                            let lat = latlng[i]['lat']
                            let lng = latlng[i]['lng']
                            /* 좌표를 받아서 path에 push */
                            path.push(new naver.maps.LatLng(lat,lng),)
                        }
                    }
                }
            })
        };

        function fast09() {
            $.ajax({
                type: "GET",
                url: "/main/09",
                data: {},
                success: function (response) {
                    /*본격적으로 시작히기 전 앞에 선언된 path 리스트 비우기*/
                    path.clear();
                    /* 롤 오버 옵션 적용 */
                    naver.maps.Event.addListener(polyline, 'mouseover', function () {
                        polyline.setOptions({
                            strokeColor: '#0800ff',
                            strokeStyle: 'solid',
                            strokeOpacity: 0.5,
                            strokeWeight: 12
                        });
                    });

                    naver.maps.Event.addListener(polyline, 'mouseout', function () {
                        polyline.setOptions({
                            strokeColor:'#1acca4',
                            strokeStyle: 'solid',
                            strokeOpacity: 1,
                            strokeWeight: 8

                        });
                    });

                    let latlng = response["latlng_all9"];
                    for (let i = 0; i < latlng.length; i++) {
                    /* 좌표 최적화 */
                        if(i%4 != 0){
                            continue;
                        }else{
                            let lat = latlng[i]['lat']
                            let lng = latlng[i]['lng']
                            /* 좌표를 받아서 path에 push */
                            path.push(new naver.maps.LatLng(lat,lng),)
                        }
                    }
                }
            })
        };

        function fast10() {
            $.ajax({
                type: "GET",
                url: "/main/10",
                data: {},
                success: function (response) {
                    /*본격적으로 시작히기 전 앞에 선언된 path 리스트 비우기*/
                    path.clear();
                    /* 롤 오버 옵션 적용 */
                    naver.maps.Event.addListener(polyline, 'mouseover', function () {
                        polyline.setOptions({
                            strokeColor: '#0800ff',
                            strokeStyle: 'solid',
                            strokeOpacity: 0.5,
                            strokeWeight: 12
                        });
                    });

                    naver.maps.Event.addListener(polyline, 'mouseout', function () {
                        polyline.setOptions({
                            strokeColor:'#1acca4',
                            strokeStyle: 'solid',
                            strokeOpacity: 1,
                            strokeWeight: 8

                        });
                    });

                    let latlng = response["latlng_all10"];
                    for (let i = 0; i < latlng.length; i++) {
                    /* 좌표 최적화 */
                        if(i%4 != 0){
                            continue;
                        }else{
                            let lat = latlng[i]['lat']
                            let lng = latlng[i]['lng']
                            /* 좌표를 받아서 path에 push */
                            path.push(new naver.maps.LatLng(lat,lng),)
                        }
                    }
                }
            })
        };

        function fast11() {
            $.ajax({
                type: "GET",
                url: "/main/11",
                data: {},
                success: function (response) {
                    /*본격적으로 시작히기 전 앞에 선언된 path 리스트 비우기*/
                    path.clear();
                    /* 롤 오버 옵션 적용 */
                    naver.maps.Event.addListener(polyline, 'mouseover', function () {
                        polyline.setOptions({
                            strokeColor: '#0800ff',
                            strokeStyle: 'solid',
                            strokeOpacity: 0.5,
                            strokeWeight: 12
                        });
                    });

                    naver.maps.Event.addListener(polyline, 'mouseout', function () {
                        polyline.setOptions({
                            strokeColor:'#1acca4',
                            strokeStyle: 'solid',
                            strokeOpacity: 1,
                            strokeWeight: 8

                        });
                    });

                    let latlng = response["latlng_all11"];
                    for (let i = 0; i < latlng.length; i++) {
                    /* 좌표 최적화 */
                        if(i%4 != 0){
                            continue;
                        }else{
                            let lat = latlng[i]['lat']
                            let lng = latlng[i]['lng']
                            /* 좌표를 받아서 path에 push */
                            path.push(new naver.maps.LatLng(lat,lng),)
                        }
                    }
                }
            })
        };

        function fast12() {
            $.ajax({
                type: "GET",
                url: "/main/12",
                data: {},
                success: function (response) {
                    /*본격적으로 시작히기 전 앞에 선언된 path 리스트 비우기*/
                    path.clear();
                    /* 롤 오버 옵션 적용 */
                    naver.maps.Event.addListener(polyline, 'mouseover', function () {
                        polyline.setOptions({
                            strokeColor: '#0800ff',
                            strokeStyle: 'solid',
                            strokeOpacity: 0.5,
                            strokeWeight: 12
                        });
                    });

                    naver.maps.Event.addListener(polyline, 'mouseout', function () {
                        polyline.setOptions({
                            strokeColor:'#1acca4',
                            strokeStyle: 'solid',
                            strokeOpacity: 1,
                            strokeWeight: 8

                        });
                    });

                    let latlng = response["latlng_all12"];
                    for (let i = 0; i < latlng.length; i++) {
                    /* 좌표 최적화 */
                        if(i%4 != 0){
                            continue;
                        }else{
                            let lat = latlng[i]['lat']
                            let lng = latlng[i]['lng']
                            /* 좌표를 받아서 path에 push */
                            path.push(new naver.maps.LatLng(lat,lng),)
                        }
                    }
                }
            })
        };
        /*--------------------------------------마커 관련---------------------------------------------*/

        const markers = []
        const newMarkers = markers.map((item,index)=>({index,...item}));

        function li(arr) {
            var count = 0;
            for (var k in arr) {
                if (arr.hasOwnProperty(k)) {
                    count++;
                }
            }
            return count;
        }

        function marker_list() {
            $.ajax({
                type: "GET",
                url: "/main_info",
                data: {},
                success: function (response) {
                    let parking = response['parking_all'];
                    console.log(parking.length);
                    for (let i = 0; i < parking.length; i++) {
                        let ID = parking[i]['id'];
                        let lat = parking[i]['lat'];
                        let lng = parking[i]['lng'];

                        console.log(ID,lat,lng)
                        markers.push({ID:ID,lat:lat,lng:lng});
                    }
                }
            })
        }
        console.log(markers)

        console.log(newMarkers)
        console.log(newMarkers.length)


        for (var i=0;i<markers.length;i++) {
            var marker = new naver.maps.Marker({
                map: map,
                position: new naver.maps.LatLng(markers[i].lat, markers[i].lng)
            });
        }


        /* 마커 테스트 */
        /*const locations = [
            { num: "01", place:"만남의광장(부산)", lat: 37.460121, lng: 127.041890 },
            { num: "02", place:"죽전휴게소(서울)", lat: 37.332380, lng: 127.104788 },
            { num: "03", place:"망향휴게소(부산)", lat: 36.855352, lng: 127.180854 },
            { num: "04", place:"옥산휴게소(부산)", lat: 36.657709, lng: 127.369801 },
            { num: "05", place:"죽암휴게소(부산)", lat: 36.486814, lng: 127.429259 },
            { num: "06", place:"인삼랜드휴게소(하남)", lat: 36.154689, lng: 127.497683 },
            { num: "07", place:"이서휴게소(천안)", lat: 35.801933, lng: 127.025797 },
            { num: "08", place:"정읍휴게소(논산)", lat: 35.5999761, lng: 126.8643364 },
            { num: "09", place:"보성녹차휴게소(순천)", lat: 34.8072995, lng: 127.1810007 },
            { num: "10", place:"횡성휴게소(강릉)", lat: 37.462763, lng: 128.133971 },
            { num: "11", place:"천등산휴게소(평택)", lat: 37.0769357, lng: 127.9893113 },
            { num: "12", place:"충주휴게소(양평)", lat: 37.0232328, lng: 127.8392751 },
            { num: "13", place:"괴산휴게소(양평)", lat: 36.8317809, lng: 127.9601453 },
            { num: "14", place:"군위휴게소(춘천)", lat: 36.2649235, lng: 128.5766838 },
            { num: "15", place:"추풍령휴게소(서울)", lat: 36.1997189, lng: 128.0032422 },
            { num: "16", place:"영산휴게소(창원)", lat: 35.429792, lng: 128.4959112 },
            { num: "17", place:"경주휴게소(부산)", lat: 35.724102, lng: 129.192641 },
            { num: "18", place:"진주휴게소(부산)", lat: 35.159759, lng: 128.122008 },
            { num: "19", place:"섬진강휴게소(부산)", lat: 34.984692, lng: 127.770356 },
            { num: "20", place:"기흥휴게소(부산)", lat: 37.234940, lng: 127.104550 },
            { num: "21", place:"안성휴게소(부산)", lat: 37.013415, lng: 127.144806 },
            { num: "22", place:"여주휴게소(인천)", lat: 37.239744, lng: 127.569961 },
            { num: "23", place:"문경휴게소(창원)", lat: 36.620401, lng: 128.149956 },
            { num: "24", place:"속리산휴게소(청원)", lat: 36.447702, lng: 127.869061 },
            { num: "25", place:"오창휴게소(통영)", lat: 36.758475, lng: 127.481779 },
            { num: "26", place:"천안삼거리휴게소(서울)", lat: 36.787830, lng: 127.173446 },
            { num: "27", place:"황간휴게소(부산)", lat: 36.248901, lng: 127.8526838 },
            { num: "28", place:"진안마이산휴게소(익산)", lat: 35.777897, lng: 127.425282 },
            { num: "29", place:"황전휴게소(완주)", lat: 35.153306, lng: 127.454719 },
            { num: "30", place:"백양사휴게소(천안)", lat: 35.393012, lng: 126.807381 },
            { num: "31", place:"칠곡휴게소(서울)", lat: 36.011782, lng: 128.430853 },
            { num: "32", place:"성주휴게소(양평)", lat: 36.008553, lng: 128.261111 },
            { num: "33", place:"안동휴게소(부산)", lat: 36.553146, lng: 128.641936 },
            { num: "34", place:"진영휴게소(순천)", lat: 35.280076, lng: 128.716002 },
            { num: "35", place:"산청휴게소(하남)", lat: 35.333518, lng: 127.939008 },
            { num: "36", place:"통도사휴게소(부산)", lat: 35.488854, lng: 129.090771 }
        ]

        console.log(typeof locations)
        console.log(Object.keys(locations).length)

        for (var i = 0; i < locations.length; i++) {
            var marker = new naver.maps.Marker({
                map: map,
                title: locations[i].place,
                position: new naver.maps.LatLng(locations[i].lat, locations[i].lng),
            });
        }*/





        // var marker = []
        // var infowindow = []
    </script>
    </body>
</html>
